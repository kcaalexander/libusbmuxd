!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
COLLECTION_H	common/collection.h	23;"	d
DEBUG	src/libusbmuxd.c	89;"	d	file:
EBADMSG	src/libusbmuxd.c	47;"	d	file:
ENDFOREACH	common/collection.h	43;"	d
EPROTO	src/libusbmuxd.c	44;"	d	file:
EVENT_BUF_LEN	src/libusbmuxd.c	68;"	d	file:
EVENT_SIZE	src/libusbmuxd.c	67;"	d	file:
FDM_EXCEPT	common/socket.h	/^	FDM_EXCEPT$/;"	e	enum:fd_mode
FDM_READ	common/socket.h	/^	FDM_READ,$/;"	e	enum:fd_mode
FDM_WRITE	common/socket.h	/^	FDM_WRITE,$/;"	e	enum:fd_mode
FOREACH	common/collection.h	36;"	d
MESSAGE_CONNECT	include/usbmuxd-proto.h	/^	MESSAGE_CONNECT = 2,$/;"	e	enum:usbmuxd_msgtype
MESSAGE_DEVICE_ADD	include/usbmuxd-proto.h	/^	MESSAGE_DEVICE_ADD = 4,$/;"	e	enum:usbmuxd_msgtype
MESSAGE_DEVICE_PAIRED	include/usbmuxd-proto.h	/^	MESSAGE_DEVICE_PAIRED = 6,$/;"	e	enum:usbmuxd_msgtype
MESSAGE_DEVICE_REMOVE	include/usbmuxd-proto.h	/^	MESSAGE_DEVICE_REMOVE = 5,$/;"	e	enum:usbmuxd_msgtype
MESSAGE_LISTEN	include/usbmuxd-proto.h	/^	MESSAGE_LISTEN = 3,$/;"	e	enum:usbmuxd_msgtype
MESSAGE_PLIST	include/usbmuxd-proto.h	/^	MESSAGE_PLIST = 8,$/;"	e	enum:usbmuxd_msgtype
MESSAGE_RESULT	include/usbmuxd-proto.h	/^	MESSAGE_RESULT  = 1,$/;"	e	enum:usbmuxd_msgtype
PLIST_BUNDLE_ID	src/libusbmuxd.c	74;"	d	file:
PLIST_CLIENT_VERSION_STRING	src/libusbmuxd.c	75;"	d	file:
PLIST_LIBUSBMUX_VERSION	src/libusbmuxd.c	77;"	d	file:
PLIST_PROGNAME	src/libusbmuxd.c	76;"	d	file:
RECV_TIMEOUT	common/socket.c	43;"	d	file:
RESULT_BADCOMMAND	include/usbmuxd-proto.h	/^	RESULT_BADCOMMAND = 1,$/;"	e	enum:usbmuxd_result
RESULT_BADDEV	include/usbmuxd-proto.h	/^	RESULT_BADDEV = 2,$/;"	e	enum:usbmuxd_result
RESULT_BADVERSION	include/usbmuxd-proto.h	/^	RESULT_BADVERSION = 6,$/;"	e	enum:usbmuxd_result
RESULT_CONNREFUSED	include/usbmuxd-proto.h	/^	RESULT_CONNREFUSED = 3,$/;"	e	enum:usbmuxd_result
RESULT_OK	include/usbmuxd-proto.h	/^	RESULT_OK = 0,$/;"	e	enum:usbmuxd_result
SHUT_RD	common/socket.h	37;"	d
SHUT_RDWR	common/socket.h	39;"	d
SHUT_WR	common/socket.h	38;"	d
SOCKET_SOCKET_H	common/socket.h	23;"	d
UE_DEVICE_ADD	include/usbmuxd.h	/^    UE_DEVICE_ADD = 1,$/;"	e	enum:usbmuxd_event_type
UE_DEVICE_PAIRED	include/usbmuxd.h	/^    UE_DEVICE_PAIRED$/;"	e	enum:usbmuxd_event_type
UE_DEVICE_REMOVE	include/usbmuxd.h	/^    UE_DEVICE_REMOVE,$/;"	e	enum:usbmuxd_event_type
USBMUXD_API	src/libusbmuxd.c	34;"	d	file:
USBMUXD_API	src/libusbmuxd.c	37;"	d	file:
USBMUXD_API	src/libusbmuxd.c	39;"	d	file:
USBMUXD_DIRNAME	src/libusbmuxd.c	69;"	d	file:
USBMUXD_H	include/usbmuxd.h	24;"	d
USBMUXD_PROTOCOL_VERSION	include/usbmuxd-proto.h	27;"	d
USBMUXD_PROTO_H	include/usbmuxd-proto.h	24;"	d
USBMUXD_SOCKET_FILE	include/usbmuxd-proto.h	32;"	d
USBMUXD_SOCKET_NAME	src/libusbmuxd.c	70;"	d	file:
USBMUXD_SOCKET_PORT	include/usbmuxd-proto.h	30;"	d
acceptor_thread	tools/iproxy.c	/^static void *acceptor_thread(void *arg)$/;"	f	file:
capacity	common/collection.h	/^	int capacity;$/;"	m	struct:collection
client_data	tools/iproxy.c	/^struct client_data {$/;"	s	file:
collection	common/collection.h	/^struct collection {$/;"	s
collection_add	common/collection.c	/^void collection_add(struct collection *col, void *element)$/;"	f
collection_count	common/collection.c	/^int collection_count(struct collection *col)$/;"	f
collection_free	common/collection.c	/^void collection_free(struct collection *col)$/;"	f
collection_init	common/collection.c	/^void collection_init(struct collection *col)$/;"	f
collection_remove	common/collection.c	/^void collection_remove(struct collection *col, void *element)$/;"	f
connect_usbmuxd_socket	src/libusbmuxd.c	/^static int connect_usbmuxd_socket()$/;"	f	file:
create_plist_message	src/libusbmuxd.c	/^static plist_t create_plist_message(const char* message_type)$/;"	f	file:
device	include/usbmuxd.h	/^    usbmuxd_device_info_t device;$/;"	m	struct:__anon2
device_id	include/usbmuxd-proto.h	/^	uint32_t device_id;$/;"	m	struct:usbmuxd_connect_request
device_id	include/usbmuxd-proto.h	/^	uint32_t device_id;$/;"	m	struct:usbmuxd_device_record
device_info_from_device_record	src/libusbmuxd.c	/^static usbmuxd_device_info_t *device_info_from_device_record(struct usbmuxd_device_record *dev)$/;"	f	file:
device_monitor	src/libusbmuxd.c	/^static void *device_monitor(void *data)$/;"	f	file:
device_monitor_cleanup	src/libusbmuxd.c	/^static void device_monitor_cleanup(void* data)$/;"	f	file:
device_port	tools/iproxy.c	/^static uint16_t device_port = 0;$/;"	v	file:
device_record_from_plist	src/libusbmuxd.c	/^static struct usbmuxd_device_record* device_record_from_plist(plist_t props)$/;"	f	file:
device_udid	tools/iproxy.c	/^static char* device_udid = NULL;$/;"	v	file:
devices	src/libusbmuxd.c	/^static struct collection devices;$/;"	v	typeref:struct:collection	file:
devices_find	src/libusbmuxd.c	/^static usbmuxd_device_info_t *devices_find(uint32_t handle)$/;"	f	file:
devmon	src/libusbmuxd.c	/^HANDLE devmon = NULL;$/;"	v
devmon	src/libusbmuxd.c	/^pthread_t devmon;$/;"	v
event	include/usbmuxd.h	/^    int event;$/;"	m	struct:__anon2
event_cb	src/libusbmuxd.c	/^static usbmuxd_event_cb_t event_cb = NULL;$/;"	v	file:
fd	tools/iproxy.c	/^	int fd;$/;"	m	struct:client_data	file:
fd_mode	common/socket.h	/^enum fd_mode {$/;"	g
fd_mode	common/socket.h	/^typedef enum fd_mode fd_mode;$/;"	t	typeref:enum:fd_mode
generate_event	src/libusbmuxd.c	/^static void generate_event(usbmuxd_event_cb_t callback, const usbmuxd_device_info_t *dev, enum usbmuxd_event_type event, void *user_data)$/;"	f	file:
get_next_event	src/libusbmuxd.c	/^static int get_next_event(int sfd, usbmuxd_event_cb_t callback, void *user_data)$/;"	f	file:
handle	include/usbmuxd.h	/^	uint32_t handle;$/;"	m	struct:__anon1
header	include/usbmuxd-proto.h	/^	struct usbmuxd_header header;$/;"	m	struct:usbmuxd_connect_request	typeref:struct:usbmuxd_connect_request::usbmuxd_header
header	include/usbmuxd-proto.h	/^	struct usbmuxd_header header;$/;"	m	struct:usbmuxd_listen_request	typeref:struct:usbmuxd_listen_request::usbmuxd_header
header	include/usbmuxd-proto.h	/^	struct usbmuxd_header header;$/;"	m	struct:usbmuxd_result_msg	typeref:struct:usbmuxd_result_msg::usbmuxd_header
length	include/usbmuxd-proto.h	/^	uint32_t length;    \/\/ length of message, including header$/;"	m	struct:usbmuxd_header
libusbmuxd_debug	src/libusbmuxd.c	/^static int libusbmuxd_debug = 0;$/;"	v	file:
libusbmuxd_set_debug_level	src/libusbmuxd.c	/^USBMUXD_API void libusbmuxd_set_debug_level(int level)$/;"	f
libusbmuxd_set_use_inotify	src/libusbmuxd.c	/^USBMUXD_API void libusbmuxd_set_use_inotify(int set)$/;"	f
list	common/collection.h	/^	void **list;$/;"	m	struct:collection
listen_port	tools/iproxy.c	/^static uint16_t listen_port = 0;$/;"	v	file:
listenfd	src/libusbmuxd.c	/^static int listenfd = -1;$/;"	v	file:
location	include/usbmuxd-proto.h	/^	uint32_t location;$/;"	m	struct:usbmuxd_device_record
main	tools/iproxy.c	/^int main(int argc, char **argv)$/;"	f
message	include/usbmuxd-proto.h	/^	uint32_t message;   \/\/ message type$/;"	m	struct:usbmuxd_header
padding	include/usbmuxd-proto.h	/^	uint16_t padding;$/;"	m	struct:usbmuxd_device_record
port	include/usbmuxd-proto.h	/^	uint16_t port;   \/\/ TCP port number$/;"	m	struct:usbmuxd_connect_request
product_id	include/usbmuxd-proto.h	/^	uint16_t product_id;$/;"	m	struct:usbmuxd_device_record
product_id	include/usbmuxd.h	/^	int product_id;$/;"	m	struct:__anon1
proto_version	src/libusbmuxd.c	/^static volatile int proto_version = 1;$/;"	v	file:
receive_packet	src/libusbmuxd.c	/^static int receive_packet(int sfd, struct usbmuxd_header *header, void **payload, int timeout)$/;"	f	file:
reserved	include/usbmuxd-proto.h	/^	uint16_t reserved;   \/\/ set to zero$/;"	m	struct:usbmuxd_connect_request
result	include/usbmuxd-proto.h	/^	uint32_t result;$/;"	m	struct:usbmuxd_result_msg
run_ctos_loop	tools/iproxy.c	/^static void *run_ctos_loop(void *arg)$/;"	f	file:
run_stoc_loop	tools/iproxy.c	/^static void *run_stoc_loop(void *arg)$/;"	f	file:
send_connect_packet	src/libusbmuxd.c	/^static int send_connect_packet(int sfd, uint32_t tag, uint32_t device_id, uint16_t port)$/;"	f	file:
send_list_devices_packet	src/libusbmuxd.c	/^static int send_list_devices_packet(int sfd, uint32_t tag)$/;"	f	file:
send_listen_packet	src/libusbmuxd.c	/^static int send_listen_packet(int sfd, uint32_t tag)$/;"	f	file:
send_packet	src/libusbmuxd.c	/^static int send_packet(int sfd, uint32_t message, uint32_t tag, void *payload, uint32_t payload_size)$/;"	f	file:
send_pair_record_packet	src/libusbmuxd.c	/^static int send_pair_record_packet(int sfd, uint32_t tag, const char* msgtype, const char* pair_record_id, plist_t data)$/;"	f	file:
send_plist_packet	src/libusbmuxd.c	/^static int send_plist_packet(int sfd, uint32_t tag, plist_t message)$/;"	f	file:
send_read_buid_packet	src/libusbmuxd.c	/^static int send_read_buid_packet(int sfd, uint32_t tag)$/;"	f	file:
serial_number	include/usbmuxd-proto.h	/^	char serial_number[256];$/;"	m	struct:usbmuxd_device_record
sfd	tools/iproxy.c	/^	int sfd;$/;"	m	struct:client_data	file:
sleep	src/libusbmuxd.c	57;"	d	file:
socket_accept	common/socket.c	/^int socket_accept(int fd, uint16_t port)$/;"	f
socket_check_fd	common/socket.c	/^int socket_check_fd(int fd, fd_mode fdm, unsigned int timeout)$/;"	f
socket_close	common/socket.c	/^int socket_close(int fd) {$/;"	f
socket_connect	common/socket.c	/^int socket_connect(const char *addr, uint16_t port)$/;"	f
socket_connect_unix	common/socket.c	/^int socket_connect_unix(const char *filename)$/;"	f
socket_create	common/socket.c	/^int socket_create(uint16_t port)$/;"	f
socket_create_unix	common/socket.c	/^int socket_create_unix(const char *filename)$/;"	f
socket_peek	common/socket.c	/^int socket_peek(int fd, void *data, size_t length)$/;"	f
socket_receive	common/socket.c	/^int socket_receive(int fd, void *data, size_t length)$/;"	f
socket_receive_timeout	common/socket.c	/^int socket_receive_timeout(int fd, void *data, size_t length, int flags,$/;"	f
socket_send	common/socket.c	/^int socket_send(int fd, void *data, size_t length)$/;"	f
socket_set_verbose	common/socket.c	/^void socket_set_verbose(int level)$/;"	f
socket_shutdown	common/socket.c	/^int socket_shutdown(int fd, int how)$/;"	f
socklen_t	tools/iproxy.c	/^typedef unsigned int socklen_t;$/;"	t	file:
stop_ctos	tools/iproxy.c	/^	volatile int stop_ctos;$/;"	m	struct:client_data	file:
stop_stoc	tools/iproxy.c	/^	volatile int stop_stoc;$/;"	m	struct:client_data	file:
tag	include/usbmuxd-proto.h	/^	uint32_t tag;       \/\/ responses to this query will echo back this tag$/;"	m	struct:usbmuxd_header
try_list_devices	src/libusbmuxd.c	/^static volatile int try_list_devices = 1;$/;"	v	file:
udid	include/usbmuxd.h	/^	char udid[41];$/;"	m	struct:__anon1
usbmuxd_connect	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_connect(const int handle, const unsigned short port)$/;"	f
usbmuxd_connect_request	include/usbmuxd-proto.h	/^struct usbmuxd_connect_request {$/;"	s
usbmuxd_delete_pair_record	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_delete_pair_record(const char* record_id)$/;"	f
usbmuxd_device_info_t	include/usbmuxd.h	/^} usbmuxd_device_info_t;$/;"	t	typeref:struct:__anon1
usbmuxd_device_list_free	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_device_list_free(usbmuxd_device_info_t **device_list)$/;"	f
usbmuxd_device_record	include/usbmuxd-proto.h	/^struct usbmuxd_device_record {$/;"	s
usbmuxd_disconnect	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_disconnect(int sfd)$/;"	f
usbmuxd_event_cb_t	include/usbmuxd.h	/^typedef void (*usbmuxd_event_cb_t) (const usbmuxd_event_t *event, void *user_data);$/;"	t
usbmuxd_event_t	include/usbmuxd.h	/^} usbmuxd_event_t;$/;"	t	typeref:struct:__anon2
usbmuxd_event_type	include/usbmuxd.h	/^enum usbmuxd_event_type {$/;"	g
usbmuxd_get_device_by_udid	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_get_device_by_udid(const char *udid, usbmuxd_device_info_t *device)$/;"	f
usbmuxd_get_device_list	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_get_device_list(usbmuxd_device_info_t **device_list)$/;"	f
usbmuxd_get_result	src/libusbmuxd.c	/^static int usbmuxd_get_result(int sfd, uint32_t tag, uint32_t *result, void **result_plist)$/;"	f	file:
usbmuxd_header	include/usbmuxd-proto.h	/^struct usbmuxd_header {$/;"	s
usbmuxd_listen	src/libusbmuxd.c	/^static int usbmuxd_listen()$/;"	f	file:
usbmuxd_listen_inotify	src/libusbmuxd.c	/^static int usbmuxd_listen_inotify()$/;"	f	file:
usbmuxd_listen_poll	src/libusbmuxd.c	/^static int usbmuxd_listen_poll()$/;"	f	file:
usbmuxd_listen_request	include/usbmuxd-proto.h	/^struct usbmuxd_listen_request {$/;"	s
usbmuxd_msgtype	include/usbmuxd-proto.h	/^enum usbmuxd_msgtype {$/;"	g
usbmuxd_read_buid	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_read_buid(char **buid)$/;"	f
usbmuxd_read_pair_record	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_read_pair_record(const char* record_id, char **record_data, uint32_t *record_size)$/;"	f
usbmuxd_recv	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_recv(int sfd, char *data, uint32_t len, uint32_t *recv_bytes)$/;"	f
usbmuxd_recv_timeout	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_recv_timeout(int sfd, char *data, uint32_t len, uint32_t *recv_bytes, unsigned int timeout)$/;"	f
usbmuxd_result	include/usbmuxd-proto.h	/^enum usbmuxd_result {$/;"	g
usbmuxd_result_msg	include/usbmuxd-proto.h	/^struct usbmuxd_result_msg {$/;"	s
usbmuxd_save_pair_record	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_save_pair_record(const char* record_id, const char *record_data, uint32_t record_size)$/;"	f
usbmuxd_send	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_send(int sfd, const char *data, uint32_t len, uint32_t *sent_bytes)$/;"	f
usbmuxd_subscribe	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_subscribe(usbmuxd_event_cb_t callback, void *user_data)$/;"	f
usbmuxd_unsubscribe	src/libusbmuxd.c	/^USBMUXD_API int usbmuxd_unsubscribe()$/;"	f
use_inotify	src/libusbmuxd.c	/^static int use_inotify = 1;$/;"	v	file:
use_tag	src/libusbmuxd.c	/^static volatile int use_tag = 0;$/;"	v	file:
verbose	common/socket.c	/^static int verbose = 0;$/;"	v	file:
version	include/usbmuxd-proto.h	/^	uint32_t version;   \/\/ protocol version$/;"	m	struct:usbmuxd_header
wsa_init	common/socket.c	/^static int wsa_init = 0;$/;"	v	file:
